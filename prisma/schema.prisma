// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int              @id @default(autoincrement())
  ownedServers  Server[]         @relation("OwnedServers")
  email         String           @unique
  username      String           @unique
  password      String           @unique
  userimage     String?
  memberServers UsersOnServers[] @relation("MemberServers")
  post          Post[]

  sentFriendRequests     FriendRequest[] @relation("SenderRequest")
  recievedFriendRequests FriendRequest[] @relation("RecieverRequest")



}

model FriendRequest {
  id         Int  @id @default(autoincrement())
  senderId   Int
  sender     User @relation("SenderRequest", fields: [senderId], references: [id])
  recieverId Int
  reciever   User @relation("RecieverRequest", fields: [recieverId], references: [id])

}

model Server {
  id          Int              @id @default(autoincrement())
  owner       User             @relation("OwnedServers", fields: [ownerId], references: [id])
  ownerId     Int
  servername  String           @unique
  serverimage String
  members     UsersOnServers[]
  channel     Channel[]


}

model UsersOnServers {
  user     User   @relation("MemberServers", fields: [userId], references: [id])
  userId   Int
  server   Server @relation(fields: [serverId], references: [id])
  serverId Int

  @@id([userId, serverId])
}

model Channel {
  id          Int    @id @default(autoincrement())
  channelName String @unique
  topic       String
  serverId    Int
  server      Server @relation(fields: [serverId], references: [id])
  post        Post[]
}

model Post {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  channelId Int
  channel   Channel  @relation(fields: [channelId], references: [id])
  message   String   @db.VarChar(255)
  dateTime  DateTime @default(now())

}
